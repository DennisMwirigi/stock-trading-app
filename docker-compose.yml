services:
  db:
    image: mongo:6
    read_only: true
    init: true
    volumes:
      - type: tmpfs
        target: /tmp

  redis:
    container_name: redisCache
    image: redis
    init: true
    ports:
      - "6379:6379"

  polling_microservice:
    build:
      context: ./
      dockerfile: polling_service/Dockerfile
    pull_policy: never
    ports:
      - target: 8081
        published: 8081
        protocol: tcp
    command: --bind :8081
    depends_on:
      - redis
      - quote_server
    environment:
      QUOTE_SERVER: quote_server:4444
      TRANSACTION_SERVICE: http://transaction-server:8080

  transaction-server:
    build:
      context: ./
      dockerfile: transaction-server/Dockerfile
    pull_policy: never
    ports:
      - target: 8080
        published: 8080
        protocol: tcp
    depends_on:
      - redis
      - db
      - polling_microservice
    read_only: true
    init: true
    command: --bind :8080
    environment:
      DATABASE_URI: mongodb://db/?directConnection=true
      POLLING_SERVICE: http://polling_microservice:8081

  quote_server:
    build: ./quote_server
    pull_policy: never
    ports:
      - target: 4444
        published: 4444
        protocol: tcp
    command: --bind :4444

  web-ui-1: &web-ui
    build: ./web-ui/
    pull_policy: never
    depends_on:
      - transaction-server
    read_only: true
    init: true
    volumes:
      - type: tmpfs
        target: /tmp
      - type: bind
        source: ./web-ui/config.toml
        target: /app/config.toml
        read_only: true
    environment:
      TRANSACTION_SERVICE: http://transaction-server:8080

  web-ui-2: *web-ui

  web-ui-load-balancer:
    build: ./web-ui-load-balancer/
    pull_policy: never
    ports:
      - target: 8000
        published: 8000
        protocol: tcp
    depends_on:
      - web-ui-1
      - web-ui-2
    read_only: false
    init: true

  #build-test:
  #  build: ./testing/
  #  links:
  #    - transaction-server
